050224 이후 해야 할 것 (08 이후)

- 모듈 설계, 클래스 / 함수 설계 -> 1
- 사용자로부터 분석 기간 입력받는 기능 구현 -> 1
- 데이터 저장, 수집 성능 향상 -> 2
- 데이터 전처리 품질 향상 -> 2
- 결과물 품질 향상 -> 2
- requirements / environments 설계 -> 3
- 공통 메소드, 파이프라인, 개발 환경 논의 + 공유, 각자 담당할 것 / 담당 영역 별 핵심 구현 사항 논의 -> 1

모듈 설계, 클래스 / 함수 설계
    - 핵심 기능 러프하게 구현한 것만 남기고 테스트했던 스크립트는 ipynb에서 제거
    - 폴더별 역할 정리
        - main : 공식 배포 -> 안정화한 제품 / prototype에서 안정화시킨 기능 추가한 것?
        - prototype : 중간 정리 -> 불안정한 제품 / 배포 X / tst에서 구현한 기능을 추가한 것?
        - tst
            - 기능 테스트 영역
            - 여기서 기능 완성 후 prototype에 추가 / prototype에서 문제 발생한 기능 안정화?
        -> main, prototype 통합?

main, prototype
    구조는 동일하게
    구조
    .
    ㄴ-기능 모음 (폴더)
        ㄴ-데이터 적재 (모듈 -> .py)
            ㄴ-사용자 입력 수집기
            ㄴ-크롤러
                ㄴ-(고려) 일정 시간 단위로 수집
            ㄴ-적재기
                ㄴ-원본->메모리 적재
                    ㄴ- +++ ...
        ㄴ-전처리 (모듈 -> .py)
            ㄴ-(고려) 데이터 선별
                ㄴ-분석 대상에서 길이 0짜리 레코드 제외
                ㄴ-분석 대상에서 한글, 영문 외 일어 / 중어 제목 제외
            ㄴ-클렌저
                ㄴ-특수문자 처리
                    ㄴ-특수문자 정규화 테이블 생성
                    ㄴ-특수문자 정규화
                    ㄴ-불필요한 특수문자 제거
                ㄴ-불필요한 표현 제거 : (속보) 등
            ㄴ-토크나이저
                ㄴ-단어 정규화
                    ㄴ-(고려) 특수문자->단어 변환
                    ㄴ-(고려) 한자->한국어 변환
                ㄴ-언어적 처리
                    ㄴ-조사 제거
                    ㄴ-불용어 제거
                    ㄴ-(고려) ngram 생성
                    ㄴ-(고려) 원형 복원
                    ㄴ-(고려) 품사 선별 : 특정 품사만 분석 대상으로 선정
                    ㄴ- +++ ...
            ㄴ-벡터라이저
                ㄴ-빈도 기반
                ㄴ-(고려) tfidf 활용
        ㄴ-결과 산출 (모듈 -> .py)
            ㄴ-차트 생성기
                ㄴ-파이 차트
                    ㄴ-단어 빈도 기반
                    ㄴ-분야 기반
                ㄴ-히트맵
                ㄴ-워드 클라우드
                ㄴ-...
            ㄴ-요약 보고 생성기
    ㄴ-프로그램 시작점 (.py)

tst


개발 방법
    1. tst/.에서 노트북으로 기능 구현 -> tst/~.ipynb
    2. tst/.에서 구현한 것을 tst/util에 통합 -> tst/util/~.py
    3. tst/util 테스트 + 조정 -> tst/util + tst/tst_main... -> 프로토타입
    4. 조정한 것 배포 -> main

할 것 상세 
    - 토큰화 성능 향상
    - 재형성 성능 향상
    - 키워드 요약 보고 정의 및 구현
    - 통합, 테스트, 저장소 구조 변경

모듈 구조
.
    데이터
        일자별 데이터.csv
    리소스
        __init__.py -> 기본 세팅 (정규화 테이블, 불용어 목록 등)

    메인
        유틸
            __init__
            기능들 ... 
        main.py
    
    tst
        유틸
            __init__
            기능들 ... 
        tst_main.py
        테스트 기능들.ipynb
















